package CourseTasks;

/*
–ü—Ä–æ—á–∏—Ç–∞—Ç—å —Å –∫–æ–Ω—Å–æ–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç—Ä—ë—Ö —Ç–æ—á–µ–∫ –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏:
(x1, y1), (x2, y2), (x3, y3)
‚Ä¢ –í—ã—á–∏—Å–ª–∏—Ç—å –∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω –ø–ª–æ—â–∞–¥—å –¥–∞–Ω–Ω–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞
‚Ä¢ –î–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ–æ—Ä–º—É–ª–æ–π –ì–µ—Ä–æ–Ω–∞:
‚Ä¢ ùëÜ‚àÜ = ùëù(ùëù ‚àí ùëé)(ùëù ‚àí ùëè)(ùëù ‚àí ùëê), –≥–¥–µ  ùëù ‚àí–ø–æ–ª—É–ø–µ—Ä–∏–º–µ—Ç—Ä —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞  ùëù =( ùëé + ùëè + ùëê )/2, ùëé ,  ùëè ,  ùëê ‚àí–¥–ª–∏–Ω—ã —Å—Ç–æ—Ä–æ–Ω —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ —ç—Ç–∏ —Ç–æ—á–∫–∏ –ª–µ–∂–∞—Ç –Ω–∞ –æ–¥–Ω–æ–π –ø—Ä—è–º–æ–π ‚Äì –≤ —ç—Ç–æ–º
—Å–ª—É—á–∞–µ –≤—ã—á–∏—Å–ª—è—Ç—å –ø–ª–æ—â–∞–¥—å –Ω–µ –Ω—É–∂–Ω–æ, –∞ –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±
—ç—Ç–æ–º
‚Ä¢ –î–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∫–æ—Ä–Ω—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É
Math.sqrt(–∑–Ω–∞—á–µ–Ω–∏–µ)
 */

import java.util.Scanner;

public class TriangleArea {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É —Ö –ø–µ—Ä–≤–æ–π —Ç–æ—á–∫–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏:");
        double x1 = scanner.nextDouble();

        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É y –ø–µ—Ä–≤–æ–π —Ç–æ—á–∫–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏:");
        double y1 = scanner.nextDouble();

        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É x –≤—Ç–æ—Ä–æ–π —Ç–æ—á–∫–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏:");
        double x2 = scanner.nextDouble();

        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É y –≤—Ç–æ—Ä–æ–π —Ç–æ—á–∫–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏:");
        double y2 = scanner.nextDouble();

        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É x —Ç—Ä–µ—Ç—å–µ–π —Ç–æ—á–∫–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏:");
        double x3 = scanner.nextDouble();

        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É y —Ç—Ä–µ—Ç—å–µ–π —Ç–æ—á–∫–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏:");
        double y3 = scanner.nextDouble();

        double epsilon = 1e-10;

        if (Math.abs((y2 - y1) * (x3 - x1) - (y3 - y1) * (x2 - x1)) <= epsilon) {
            System.out.println("–ó–∞–¥–∞–Ω–Ω—ã–µ —Ç–æ—á–∫–∏ –ª–µ–∂–∞—Ç –Ω–∞ –æ–¥–Ω–æ–π –ø—Ä—è–º–æ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑");
            return;
        }

        double length12 = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));
        double length23 = Math.sqrt(Math.pow(x2 - x3, 2) + Math.pow(y2 - y3, 2));
        double length31 = Math.sqrt(Math.pow(x1 - x3, 2) + Math.pow(y1 - y3, 2));

        double halfPerimeter = (length12 + length23 + length31) / 2;

        double area = Math.sqrt(halfPerimeter * (halfPerimeter - length12) * (halfPerimeter - length23) * (halfPerimeter - length31));
        System.out.println("–ü–ª–æ—â–∞–¥—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ —Ä–∞–≤–Ω–∞: " + area);
    }
}