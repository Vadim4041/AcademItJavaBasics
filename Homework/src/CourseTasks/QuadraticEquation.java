package CourseTasks;

/*
‚Ä¢ –ü—Ä–æ—á–∏—Ç–∞—Ç—å —Å –∫–æ–Ω—Å–æ–ª–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã a, b –∏ c –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ
—É—Ä–∞–≤–Ω–µ–Ω–∏—è  ùëéùë•2 + ùëèùë• + ùëê = 0 –∏ –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ —ç—Ç–æ–≥–æ
—É—Ä–∞–≤–Ω–µ–Ω–∏—è
‚Ä¢ –ù–µ –∑–∞–±—ã—Ç—å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ 3 —Å–ª—É—á–∞—è ‚Äì –∫–æ–≥–¥–∞ –µ—Å—Ç—å 2 –∫–æ—Ä–Ω—è, 1
–∫–æ—Ä–µ–Ω—å –∏ –Ω–µ—Ç —Ä–µ—à–µ–Ω–∏–π
‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–∂–µ –µ—Å–ª–∏ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–µ
–∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ (a —Ä–∞–≤–µ–Ω 0), –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–µ—à–∞—Ç—å –ª–∏–Ω–µ–π–Ω–æ–µ
—É—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏ —Ç.–¥.
 */

import java.util.Scanner;

public class QuadraticEquation {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç a –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è:");
        double a = scanner.nextDouble();

        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç b –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è:");
        double b = scanner.nextDouble();

        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç c –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è:");
        double c = scanner.nextDouble();

        double epsilon = 1.0e-10;

        if (Math.abs(a) <= epsilon && Math.abs(b) <= epsilon) {
            if (Math.abs(c) <= epsilon) {
                System.out.println("–í—Å–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Ä–∞–≤–Ω—ã –Ω—É–ª—é, —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, –∫–æ—Ä–Ω–µ–π –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑");
            } else {
                System.out.println("–¢–æ–ª—å–∫–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã a –∏ b —Ä–∞–≤–Ω—ã –Ω—É–ª—é, —Ç–∞–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—Ä–∞–≤–Ω–µ–Ω–∏–µ–º, —É –Ω–µ–≥–æ –Ω–µ—Ç –∫–æ—Ä–Ω–µ–π, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑");
            }

            return;
        }

        if (Math.abs(a) <= epsilon) {
            double x = -c / b;
            System.out.println("–î–∞–Ω–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏–Ω–µ–π–Ω—ã–º, –µ–≥–æ –∫–æ—Ä–µ–Ω—å —Ä–∞–≤–µ–Ω " + x);
            return;
        }

        double discriminant = Math.pow(b, 2) - 4 * a * c;

        if (discriminant < -epsilon) {
            System.out.println("–£ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏ –Ω–µ—Ç –∫–æ—Ä–Ω–µ–π");
        } else if (Math.abs(discriminant) <= epsilon) {
            double x = -b / (2 * a);
            System.out.println("–£ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏ –¥–≤–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∫–æ—Ä–Ω—è, —Ä–∞–≤–Ω—ã—Ö " + x);
        } else {
            double x1 = (-b + Math.sqrt(discriminant)) / (2 * a);
            double x2 = (-b - Math.sqrt(discriminant)) / (2 * a);
            System.out.printf("–£ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏ –¥–≤–∞ —Ä–∞–∑–Ω—ã—Ö –∫–æ—Ä–Ω—è, —Ä–∞–≤–Ω—ã—Ö %f –∏ %f", x1, x2);
        }
    }
}
